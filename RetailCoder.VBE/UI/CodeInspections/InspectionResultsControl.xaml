<UserControl x:Class="Rubberduck.UI.CodeInspections.InspectionResultsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:inspections="clr-namespace:Rubberduck.Inspections"
             xmlns:resx="clr-namespace:Rubberduck.UI"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:codeInspections="clr-namespace:Rubberduck.UI.CodeInspections"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             ResxExtension.DefaultResxName="Rubberduck.UI.RubberduckUI" 
             Language="{UICulture}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance codeInspections:InspectionResultsViewModel}">
    <UserControl.Resources>
        
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        
        <Style x:Key="LinkButton" TargetType="Button" BasedOn="{StaticResource ResourceKey={x:Type Button}}">

            <Setter Property="Width" Value="Auto"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                  ContentTemplate="{TemplateBinding  ContentTemplate}"
                                  VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextDecorations" Value="Underline" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <Style x:Key="ShinyTreeView" 
               TargetType="{x:Type TreeViewItem}">
            <Setter Property="BorderThickness" Value="1.5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                </MultiTrigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <codeInspections:InspectionSeverityImageSourceConverter x:Key="SeverityIconConverter" />
        <codeInspections:InspectionImageSourceConverter x:Key="InspectionIconConverter" />
        <codeInspections:InspectionDescriptionConverter x:Key="InspectionDescriptionConverter" />

        <Style x:Key="IconStyle" TargetType="Image">
            <Setter Property="Height" Value="16" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Margin" Value="4" />
        </Style>
        
        <CollectionViewSource x:Key="InspectionTypeGroupViewSource" Source="{Binding Results}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Inspection.InspectionTypeName" />
                <PropertyGroupDescription PropertyName="Inspection" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Inspection" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        
        <CollectionViewSource x:Key="CodeModuleGroupViewSource" Source="{Binding Results}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="QualifiedSelection.QualifiedName" />
                <PropertyGroupDescription PropertyName="Inspection" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Inspection" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <DataTemplate x:Key="InspectionResultTemplate" 
                      DataType="{x:Type inspections:ICodeInspectionResult}">
            <StackPanel Orientation="Horizontal" Margin="2" Height="22" HorizontalAlignment="Stretch">
                <TextBlock VerticalAlignment="Center" 
                           Margin="4"
                           Text="{Binding Description}" 
                           TextWrapping="NoWrap"/>
            </StackPanel>
        </DataTemplate>
        
        <HierarchicalDataTemplate x:Key="InspectionGroupsTemplate"
                                  DataType="{x:Type CollectionViewGroup}"
                                  ItemsSource="{Binding Items}"
                                  ItemTemplate="{StaticResource InspectionResultTemplate}">

            <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Stretch" Height="22" >
                <Image Style="{StaticResource IconStyle}" 
                       Source="{Binding Name, Converter={StaticResource InspectionIconConverter}}"
                       VerticalAlignment="Center" />
                <TextBlock Margin="4" 
                           VerticalAlignment="Center" 
                           Text="{Binding Name, Converter={StaticResource InspectionDescriptionConverter}}"
                           TextWrapping="Wrap">
                    <TextBlock.ToolTip>
                        <TextBlock TextWrapping="Wrap" Text="{Binding Name.Meta}" MaxWidth="300"/>
                    </TextBlock.ToolTip>
                </TextBlock>
                <TextBlock Margin="0,4,4,4" 
                           VerticalAlignment="Center" 
                           Text="{Binding ItemCount, StringFormat=({0})}" 
                           TextWrapping="Wrap"/>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="InspectionTypeGroupsTemplate" 
                                    DataType="{x:Type CollectionViewGroup}"
                                    ItemsSource="{Binding Items}"
                                    ItemTemplate="{StaticResource InspectionGroupsTemplate}">
            <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Stretch" Height="22" >
                <TextBlock VerticalAlignment="Center" 
                           Text="{Binding Name}"
                           FontWeight="Bold"
                           TextWrapping="Wrap" />
                <TextBlock Margin="4,0,4,0" 
                           VerticalAlignment="Center" 
                           Text="{Binding ItemCount, StringFormat=({0})}" 
                           TextWrapping="Wrap" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="CodeModuleGroupsTemplate"
                                  DataType="{x:Type CollectionViewGroup}"
                                  ItemsSource="{Binding Items}"
                                  ItemTemplate="{StaticResource InspectionGroupsTemplate}">

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="22" >
                <Image Style="{StaticResource IconStyle}" Source="../../Resources/Microsoft/PNG/VSObject_Module.png" />
                <TextBlock VerticalAlignment="Center" 
                           Text="{Binding Name}"
                           FontWeight="Bold"
                           TextWrapping="Wrap"/>
                <TextBlock Margin="4,0,4,0" 
                           VerticalAlignment="Center" 
                           Text="{Binding ItemCount, StringFormat=({0})}" 
                           TextWrapping="Wrap"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        
        <DataTemplate x:Key="QuickFixItemTemplate" DataType="{x:Type inspections:CodeInspectionQuickFix}">
            <MenuItem Command="{Binding ElementName=InspectionResultsTreeView, Path=DataContext.QuickFixCommand}"
                      CommandParameter="{Binding}">
                <TextBlock Text="{Binding Description}" />
            </MenuItem>
        </DataTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*" MinHeight="64" />
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto" MinHeight="48"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Grid.RowSpan="3" Background="#FFEEF5FD" />

        <ToolBar Grid.Row="0">

            <Button Command="{Binding RefreshCommand}">
                <Image Height="16" Source="../../Resources/arrow-circle-double.png" />
            </Button>

            <Separator />
            <Menu>
                <MenuItem VerticalAlignment="Center" 
                          Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Fix}"
                          ItemsSource="{Binding SelectedItem.QuickFixes}">
                    <MenuItem.Icon>
                        <Image Height="16" Source="../../Resources/tick.png" />
                    </MenuItem.Icon>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding Path=DataContext.QuickFixCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Menu, AncestorLevel=1}}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                            <Setter Property="Header" Value="{Binding Description}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </Menu>
            <Separator />

            <Button Command="{Binding CopyResultsCommand}">
                <Image Height="16" Source="../../Resources/document-copy.png" />
            </Button>
            
            <ToggleButton x:Name="TreeViewStyleToggle" Click="ToggleButton_Click">
                <Image Style="{StaticResource IconStyle}"
                       Source="../../Resources/Microsoft/PNG/VSObject_Module.png" />
            </ToggleButton>

        </ToolBar>
        
        <TreeView Grid.Row="1" x:Name="InspectionResultsTreeView"
                  IsEnabled="{Binding CanRefresh}"
                  ItemsSource="{Binding Source={StaticResource InspectionTypeGroupViewSource}, Path=Groups}"
                  ItemTemplate="{StaticResource InspectionTypeGroupsTemplate}"
                  ItemContainerStyle="{StaticResource ShinyTreeView}"
                  HorizontalContentAlignment="Stretch"
                  MouseDoubleClick="InspectionResultsTreeView_OnMouseDoubleClick">
            <i:Interaction.Behaviors>
                <resx:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
        </TreeView>
        
        <resx:BusyIndicator Grid.Row="1" Width="36" Height="36" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibility}}" />

        <GridSplitter Grid.Row="2" Height="5" ShowsPreview="True" Cursor="SizeNS" HorizontalAlignment="Stretch"/>

        <Border Grid.Row="3" BorderThickness="0,1,0,0" BorderBrush="DimGray">

            <StackPanel Orientation="Vertical" MinHeight="48" Background="Gainsboro">
                
                <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <Image Style="{StaticResource IconStyle}" VerticalAlignment="Center" 
                           Source="{Binding SelectedItem.Inspection.Severity, Converter={StaticResource SeverityIconConverter}}"/>
                    <TextBlock Margin="4" Text="{Binding SelectedItem.Name}" FontWeight="Bold" TextWrapping="Wrap"/>
                </StackPanel>
                
                <TextBlock Margin="8" Text="{Binding SelectedItem.QualifiedSelection}" TextWrapping="Wrap" />
                
                <WrapPanel>
                    <Button Style="{StaticResource LinkButton}" Margin="4"
                            Visibility="{Binding CanExecuteQuickFixInModule, Converter={StaticResource BoolToVisibility}}"
                            Command="{Binding QuickFixInModuleCommand}"
                            Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=QuickFix_ThisModule}" />
                    <Button Style="{StaticResource LinkButton}" Margin="4"
                            Visibility="{Binding CanExecuteQuickFixInProject, Converter={StaticResource BoolToVisibility}}"
                            Command="{Binding QuickFixInProjectCommand}"
                            Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=QuickFix_ThisProject}" />
                    <Button Style="{StaticResource LinkButton}" Margin="4"
                            Visibility="{Binding CanDisableInspection, Converter={StaticResource BoolToVisibility}}"
                            Command="{Binding DisableInspectionCommand}"
                            Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=DisableThisInspection}" />
                </WrapPanel>
            </StackPanel>
        </Border>
        
    </Grid>
</UserControl>
